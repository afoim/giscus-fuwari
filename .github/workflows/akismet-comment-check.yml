name: Akismet Discussion Comment Checker

on:
  discussion_comment:
    types: [created]

jobs:
  check-akismet:
    runs-on: ubuntu-latest
    env:
      AKISMET_API_KEY: ${{ secrets.AKISMET_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Dump environment and run spam check
        shell: bash
        env:
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          COMMENT_URL: ${{ github.event.comment.url }}
          COMMENT_HTML_URL: ${{ github.event.comment.html_url }}
          DISCUSSION_TITLE: ${{ github.event.discussion.title }}
          DISCUSSION_NUMBER: ${{ github.event.discussion.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          set -euxo pipefail

          echo "===== ÁéØÂ¢ÉÂèòÈáè ====="
          echo "AKISMET_API_KEY=****"
          echo "GITHUB_TOKEN=****"
          echo "COMMENT_AUTHOR=${COMMENT_AUTHOR}"
          echo "COMMENT_BODY preview: ${COMMENT_BODY:0:100}..."
          echo "COMMENT_URL=${COMMENT_URL}"
          echo "DISCUSSION_TITLE=${DISCUSSION_TITLE}"
          echo "DISCUSSION_NUMBER=${DISCUSSION_NUMBER}"
          echo "REPO_OWNER=${REPO_OWNER}"
          echo "REPO_NAME=${REPO_NAME}"

          AKISMET_URL="https://${AKISMET_API_KEY}.rest.akismet.com/1.1/comment-check"

          echo "üîç Checking comment from ${COMMENT_AUTHOR} for spam..."
          echo "Comment preview: ${COMMENT_BODY:0:100}..."

          # Ë∞ÉÁî® Akismet Ê£ÄÊµãÂûÉÂúæËØÑËÆ∫
          AKISMET_RESPONSE=$(curl -s -X POST "$AKISMET_URL" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "User-Agent: GitHubActionBot/1.0" \
            --data-urlencode "blog=https://github.com/${REPO_OWNER}/${REPO_NAME}" \
            --data-urlencode "user_ip=127.0.0.1" \
            --data-urlencode "user_agent=GitHubActionBot/1.0" \
            --data-urlencode "comment_type=comment" \
            --data-urlencode "comment_author=${COMMENT_AUTHOR}" \
            --data-urlencode "comment_content=${COMMENT_BODY}" \
          ) || (echo "‚ö†Ô∏è Akismet API ËØ∑Ê±ÇÂ§±Ë¥•"; exit 1)

          echo "Akismet response: ${AKISMET_RESPONSE}"

          if [ "$AKISMET_RESPONSE" = "true" ]; then
            echo "üö´ Spam detected! Taking action..."

            # ‰ªé‰∫ã‰ª∂ JSON Êñá‰ª∂‰∏≠ÊèêÂèñ comment ID
            COMMENT_ID=$(jq --raw-output '.comment.id' < "$GITHUB_EVENT_PATH" || echo "")
            if [ -z "$COMMENT_ID" ]; then
              echo "‚ùå Êó†Ê≥ï‰ªé‰∫ã‰ª∂‰∏≠Ëé∑Âèñ comment idÔºåÊó†Ê≥ïÂà†Èô§ËØÑËÆ∫"
              exit 2
            fi

            API_DELETE_URL="https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/discussions/comments/${COMMENT_ID}"
            echo "Âà†Èô§ËØÑËÆ∫ API URL: $API_DELETE_URL"

            # Âà†Èô§ËØÑËÆ∫ËØ∑Ê±Ç
            DELETE_HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE "$API_DELETE_URL" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -H "User-Agent: AkismetBot/1.0" || echo "000")

            echo "Âà†Èô§ËØÑËÆ∫ HTTP Áä∂ÊÄÅÁ†Å: $DELETE_HTTP_CODE"

            if [ "$DELETE_HTTP_CODE" = "204" ]; then
              echo "‚úÖ Spam comment deleted successfully"

              ISSUE_BODY="ü§ñ **Spam Detection Report**

Akismet detected and removed a spam comment from @${COMMENT_AUTHOR}.

**Discussion**: ${DISCUSSION_TITLE}
**Original Comment URL**: ${COMMENT_HTML_URL}
**Detection Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

**Content Preview** (first 200 chars):
\`\`\`
${COMMENT_BODY:0:200}$([ ${#COMMENT_BODY} -gt 200 ] && echo "...")
\`\`\`

_This issue was created automatically by the spam detection system._"

              curl -s -X POST "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues" \
                -H "Authorization: token ${GITHUB_TOKEN}" \
                -H "Accept: application/vnd.github+json" \
                -d "$(jq -n --arg title "[Auto] Spam Comment Removed from Discussion: ${DISCUSSION_TITLE}" \
                            --arg body "$ISSUE_BODY" \
                            --argjson labels '["spam","automated-moderation"]' \
                            '{title: $title, body: $body, labels: $labels}')" \
                || echo "‚ùå ÂàõÂª∫ÂûÉÂúæËØÑËÆ∫Êä•Âëä Issue Â§±Ë¥•"

              echo "üìß Spam report issue created"

            else
              echo "‚ùå Failed to delete comment (HTTP $DELETE_HTTP_CODE)"

              ALERT_BODY="‚ö†Ô∏è **Spam Detection Alert**

Akismet detected spam content from @${COMMENT_AUTHOR}, but automatic deletion failed.

**Discussion**: ${DISCUSSION_TITLE}
**Comment URL**: ${COMMENT_HTML_URL}
**Detection Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')

**Action Required**: Please manually review and moderate this comment.

**Content Preview** (first 200 chars):
\`\`\`
${COMMENT_BODY:0:200}$([ ${#COMMENT_BODY} -gt 200 ] && echo "...")
\`\`\`

_This alert was generated automatically. Manual intervention required._"

              curl -s -X POST "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues" \
                -H "Authorization: token ${GITHUB_TOKEN}" \
                -H "Accept: application/vnd.github+json" \
                -d "$(jq -n --arg title "[URGENT] Spam Detected - Manual Review Required: ${DISCUSSION_TITLE}" \
                            --arg body "$ALERT_BODY" \
                            --argjson labels '["spam","manual-review-required","urgent"]' \
                            '{title: $title, body: $body, labels: $labels}')" \
                || echo "‚ùå ÂàõÂª∫‰∫∫Â∑•Â§çÊ†∏ÊèêÈÜí Issue Â§±Ë¥•"

              echo "üö® Manual review alert created"
            fi

          else
            echo "‚úÖ Comment passed spam check"
          fi

          exit 0
