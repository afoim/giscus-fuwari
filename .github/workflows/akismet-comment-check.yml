name: Akismet Discussion Comment Checker (Debug)
on:
  discussion_comment:
    types: [created]

jobs:
  check-akismet:
    runs-on: ubuntu-latest
    steps:
      - name: 检查并删除垃圾评论
        env:
          AKISMET_API_KEY: ${{ secrets.AKISMET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          COMMENT_URL: ${{ github.event.comment.url }}
          COMMENT_HTML_URL: ${{ github.event.comment.html_url }}
          DISCUSSION_TITLE: ${{ github.event.discussion.title }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          set -uo pipefail
          
          echo "============================================"
          echo "🤖 开始 AKISMET 垃圾评论检测 (调试模式)"
          echo "============================================"
          echo "⏰ 检测时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "👤 评论作者: ${COMMENT_AUTHOR}"
          echo "📝 评论长度: ${#COMMENT_BODY} 个字符"
          echo "🗂️ 仓库名称: ${REPO_OWNER}/${REPO_NAME}"
          echo "💬 讨论标题: ${DISCUSSION_TITLE}"
          echo "🔗 评论链接: ${COMMENT_HTML_URL}"
          echo ""
          
          echo "📄 评论内容:"
          echo "----------------------------------------"
          echo "${COMMENT_BODY}"
          echo "----------------------------------------"
          echo ""
          
          # 详细的环境变量检查
          echo "🔧 环境变量详细检查:"
          echo "✅ AKISMET_API_KEY: ${AKISMET_API_KEY:0:8}..."
          echo "✅ GITHUB_TOKEN: ${GITHUB_TOKEN:0:8}..."
          echo "🔗 COMMENT_URL: ${COMMENT_URL}"
          echo ""
          
          # 解析评论 URL 来提取必要信息
          echo "🔍 URL 解析调试:"
          echo "原始评论 URL: ${COMMENT_URL}"
          
          # 尝试从 GitHub event 中获取更多信息
          echo "📊 GitHub Event 信息:"
          echo "仓库所有者: ${REPO_OWNER}"
          echo "仓库名称: ${REPO_NAME}"
          echo "讨论标题: ${DISCUSSION_TITLE}"
          echo ""
          
          # 构建 Akismet API 请求
          echo "🌐 AKISMET API 请求信息:"
          AKISMET_URL="https://${AKISMET_API_KEY}.rest.akismet.com/1.1/comment-check"
          echo "📡 API 接口: ${AKISMET_URL:0:30}...comment-check"
          echo "🏠 博客地址: https://github.com/${REPO_OWNER}/${REPO_NAME}"
          echo ""
          
          echo "🔄 正在发送请求到 Akismet..."
          AKISMET_RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}\nTOTAL_TIME:%{time_total}" \
            -X POST "$AKISMET_URL" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "User-Agent: GitHubActionBot/1.0" \
            --data-urlencode "blog=https://github.com/${REPO_OWNER}/${REPO_NAME}" \
            --data-urlencode "user_ip=127.0.0.1" \
            --data-urlencode "user_agent=GitHubActionBot/1.0" \
            --data-urlencode "comment_type=comment" \
            --data-urlencode "comment_author=${COMMENT_AUTHOR}" \
            --data-urlencode "comment_content=${COMMENT_BODY}" \
            2>&1 || echo "CURL_ERROR")
          
          # 解析响应
          SPAM_CHECK_RESULT=$(echo "$AKISMET_RESPONSE" | head -n1)
          HTTP_CODE=$(echo "$AKISMET_RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          RESPONSE_TIME=$(echo "$AKISMET_RESPONSE" | grep "TOTAL_TIME:" | cut -d: -f2)
          
          echo "📊 AKISMET 响应结果:"
          echo "📈 HTTP 状态码: ${HTTP_CODE:-未知}"
          echo "⏱️ 响应时间: ${RESPONSE_TIME:-未知}秒"
          echo "🎯 垃圾评论检测结果: '${SPAM_CHECK_RESULT}'"
          echo "📄 完整响应: ${AKISMET_RESPONSE}"
          echo ""
          
          # 检查是否为垃圾评论
          if [ "$SPAM_CHECK_RESULT" = "true" ]; then
            echo "🚨 检测到垃圾评论!"
            echo "============================================"
            echo "🗑️ 正在尝试删除垃圾评论..."
            echo ""
            
            # 首先测试 GitHub API 连接性
            echo "🔍 测试 GitHub API 连接性:"
            echo "正在测试基本 API 访问..."
            
            API_TEST=$(curl -s -w "HTTP_CODE:%{http_code}" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -H "User-Agent: AkismetBot/1.0" \
              "https://api.github.com/user" 2>&1 || echo "API_ERROR")
            
            API_TEST_CODE=$(echo "$API_TEST" | grep "HTTP_CODE:" | cut -d: -f2)
            echo "📡 GitHub API 测试状态: ${API_TEST_CODE:-错误}"
            
            if [ "$API_TEST_CODE" = "200" ]; then
              echo "✅ GitHub API 访问正常"
            else
              echo "❌ GitHub API 访问失败"
              echo "📄 API 测试响应: ${API_TEST}"
            fi
            echo ""
            
            # 尝试访问仓库信息
            echo "🔍 测试仓库访问权限:"
            REPO_TEST=$(curl -s -w "HTTP_CODE:%{http_code}" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -H "User-Agent: AkismetBot/1.0" \
              "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}" 2>&1 || echo "REPO_ERROR")
            
            REPO_TEST_CODE=$(echo "$REPO_TEST" | grep "HTTP_CODE:" | cut -d: -f2)
            echo "📡 仓库访问状态: ${REPO_TEST_CODE:-错误}"
            echo ""
            
            # 现在尝试删除评论
            echo "🔍 GitHub API 删除请求:"
            echo "📡 API 接口: ${COMMENT_URL}"
            echo "🔑 认证令牌: token ${GITHUB_TOKEN:0:8}..."
            echo ""
            
            DELETE_RESPONSE=$(curl -v -s -w "\nHTTP_CODE:%{http_code}\nTOTAL_TIME:%{time_total}" \
              -X DELETE "$COMMENT_URL" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -H "User-Agent: AkismetBot/1.0" \
              2>&1 || echo "DELETE_ERROR")
            
            echo "📄 删除请求完整响应:"
            echo "${DELETE_RESPONSE}"
            echo ""
            
            DELETE_HTTP_CODE=$(echo "$DELETE_RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
            DELETE_TIME=$(echo "$DELETE_RESPONSE" | grep "TOTAL_TIME:" | cut -d: -f2)
            
            echo "📊 删除请求响应:"
            echo "📈 HTTP 状态码: ${DELETE_HTTP_CODE:-未知}"
            echo "⏱️ 响应时间: ${DELETE_TIME:-未知}秒"
            
            if [ "$DELETE_HTTP_CODE" = "204" ]; then
              echo "✅ 成功: 垃圾评论已成功删除"
              echo "🎉 来自 @${COMMENT_AUTHOR} 的评论已被移除"
            else
              echo "❌ 失败: 无法删除评论"
              echo "🔍 HTTP 状态码: ${DELETE_HTTP_CODE}"
              
              # 分析可能的原因
              if [ "$DELETE_HTTP_CODE" = "403" ]; then
                echo "⚠️ 权限不足 - Token 可能没有删除评论的权限"
              elif [ "$DELETE_HTTP_CODE" = "404" ]; then
                echo "⚠️ 评论未找到 - URL 可能不正确或评论已被删除"
              elif [ "$DELETE_HTTP_CODE" = "422" ]; then
                echo "⚠️ 请求格式错误 - API 调用可能有问题"
              else
                echo "⚠️ 未知错误 - 请检查完整响应信息"
              fi
            fi
            
          elif [ "$SPAM_CHECK_RESULT" = "false" ]; then
            echo "✅ 正常评论"
            echo "============================================"
            echo "🟢 Akismet 判定这不是垃圾评论"
            echo "✨ 来自 @${COMMENT_AUTHOR} 的评论被允许"
            
          else
            echo "⚠️ AKISMET 错误"
            echo "============================================"
            echo "❌ Akismet API 返回意外响应"
            echo "📄 原始响应: '${SPAM_CHECK_RESULT}'"
            echo "📈 HTTP 状态码: ${HTTP_CODE:-未知}"
          fi
          
          echo ""
          echo "============================================"
          echo "🏁 AKISMET 垃圾评论检测完成"
          echo "⏰ 结束时间: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "============================================"
