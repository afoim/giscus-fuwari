name: Akismet Discussion Comment Checker
on:
  discussion_comment:
    types: [created]

jobs:
  check-akismet:
    runs-on: ubuntu-latest
    steps:
      - name: Check if comment is spam
        env:
          AKISMET_API_KEY: ${{ secrets.AKISMET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          COMMENT_URL: ${{ github.event.comment.url }}
          COMMENT_HTML_URL: ${{ github.event.comment.html_url }}
          DISCUSSION_TITLE: ${{ github.event.discussion.title }}
          DISCUSSION_NUMBER: ${{ github.event.discussion.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          set -euo pipefail
          
          echo "🔍 Checking comment from ${COMMENT_AUTHOR} for spam..."
          echo "Comment preview: ${COMMENT_BODY:0:100}..."
          
          # 准备 Akismet API 请求数据
          AKISMET_URL="https://${AKISMET_API_KEY}.rest.akismet.com/1.1/comment-check"
          
          # 使用 curl 检查垃圾评论
          AKISMET_RESPONSE=$(curl -s -X POST "$AKISMET_URL" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -H "User-Agent: GitHubActionBot/1.0" \
            --data-urlencode "blog=https://github.com/${REPO_OWNER}/${REPO_NAME}" \
            --data-urlencode "user_ip=127.0.0.1" \
            --data-urlencode "user_agent=GitHubActionBot/1.0" \
            --data-urlencode "comment_type=comment" \
            --data-urlencode "comment_author=${COMMENT_AUTHOR}" \
            --data-urlencode "comment_content=${COMMENT_BODY}" \
            || echo "false")
          
          echo "Akismet response: ${AKISMET_RESPONSE}"
          
          if [ "$AKISMET_RESPONSE" = "true" ]; then
            echo "🚫 Spam detected! Taking action..."
            
            # 尝试删除评论
            DELETE_RESPONSE=$(curl -s -w "%{http_code}" -o /dev/null -X DELETE "$COMMENT_URL" \
              -H "Authorization: token ${GITHUB_TOKEN}" \
              -H "Accept: application/vnd.github+json" \
              -H "User-Agent: AkismetBot/1.0")
            
            if [ "$DELETE_RESPONSE" = "204" ]; then
              echo "✅ Spam comment deleted successfully"
              
              # 创建一个 issue 来记录这个事件
              ISSUE_BODY="🤖 **Spam Detection Report**
              
              Akismet detected and removed a spam comment from @${COMMENT_AUTHOR}.
              
              **Discussion**: ${DISCUSSION_TITLE}
              **Original Comment URL**: ${COMMENT_HTML_URL}
              **Detection Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
              
              **Content Preview** (first 200 chars):
              \`\`\`
              ${COMMENT_BODY:0:200}$([ ${#COMMENT_BODY} -gt 200 ] && echo "...")
              \`\`\`
              
              _This issue was created automatically by the spam detection system._"
              
              curl -s -X POST "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues" \
                -H "Authorization: token ${GITHUB_TOKEN}" \
                -H "Accept: application/vnd.github+json" \
                -d "{
                  \"title\": \"[Auto] Spam Comment Removed from Discussion: ${DISCUSSION_TITLE}\",
                  \"body\": $(echo "$ISSUE_BODY" | jq -Rs .),
                  \"labels\": [\"spam\", \"automated-moderation\"]
                }" > /dev/null
              
              echo "📧 Spam report issue created"
              
            else
              echo "❌ Failed to delete comment (HTTP ${DELETE_RESPONSE})"
              
              # 如果无法删除，创建一个警告 issue
              ALERT_BODY="⚠️ **Spam Detection Alert**
              
              Akismet detected spam content from @${COMMENT_AUTHOR}, but automatic deletion failed.
              
              **Discussion**: ${DISCUSSION_TITLE}
              **Comment URL**: ${COMMENT_HTML_URL}
              **Detection Time**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
              
              **Action Required**: Please manually review and moderate this comment.
              
              **Content Preview** (first 200 chars):
              \`\`\`
              ${COMMENT_BODY:0:200}$([ ${#COMMENT_BODY} -gt 200 ] && echo "...")
              \`\`\`
              
              _This alert was generated automatically. Manual intervention required._"
              
              curl -s -X POST "https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues" \
                -H "Authorization: token ${GITHUB_TOKEN}" \
                -H "Accept: application/vnd.github+json" \
                -d "{
                  \"title\": \"[URGENT] Spam Detected - Manual Review Required: ${DISCUSSION_TITLE}\",
                  \"body\": $(echo "$ALERT_BODY" | jq -Rs .),
                  \"labels\": [\"spam\", \"manual-review-required\", \"urgent\"]
                }" > /dev/null
              
              echo "🚨 Manual review alert created"
            fi
            
          else
            echo "✅ Comment passed spam check"
          fi
