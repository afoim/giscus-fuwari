name: Akismet Discussion Comment Checker
on:
  discussion_comment:
    types: [created]

jobs:
  check-akismet:
    runs-on: ubuntu-latest
    steps:
      - name: Check if comment is spam
        uses: actions/github-script@v7
        env:
          AKISMET_API_KEY: ${{ secrets.AKISMET_API_KEY }}
          GITHUB_TOKEN_BOT: ${{ secrets.GH_TOKEN }}
        with:
          script: |
            const { HttpClient } = require('@actions/http-client');
            const http = new HttpClient('GitHubActionBot/1.0');
            
            const comment = context.payload.comment;
            const discussion = context.payload.discussion;
            const author = comment.author?.login || 'anonymous';
            const user_ip = "127.0.0.1";
            const user_agent = "GitHubActionBot/1.0";
            
            const akismetCheck = async () => {
              // 构建表单数据
              const formData = new URLSearchParams();
              formData.append('blog', 'https://github.com');
              formData.append('user_ip', user_ip);
              formData.append('user_agent', user_agent);
              formData.append('comment_type', 'comment');
              formData.append('comment_author', author);
              formData.append('comment_content', comment.body || '');
              
              const akismetUrl = `https://${process.env.AKISMET_API_KEY}.rest.akismet.com/1.1/comment-check`;
              
              try {
                const response = await http.post(akismetUrl, formData.toString(), {
                  'Content-Type': 'application/x-www-form-urlencoded',
                  'User-Agent': 'GitHubActionBot/1.0'
                });
                
                if (response.message.statusCode !== 200) {
                  throw new Error(`Akismet API error: ${response.message.statusCode}`);
                }
                
                const body = await response.readBody();
                return body.trim() === 'true';
              } catch (error) {
                console.error('Error checking with Akismet:', error);
                return false;
              }
            };
            
            try {
              const isSpam = await akismetCheck();
              
              if (isSpam) {
                console.log('🚫 Detected spam comment. Processing...');
                
                // 使用 GitHub REST API 删除评论
                try {
                  await github.rest.teams.deleteDiscussionCommentInOrg({
                    org: context.repo.owner,
                    team_slug: context.repo.repo,
                    discussion_number: discussion.number,
                    comment_number: comment.number
                  });
                  
                  console.log('✅ Spam comment deleted successfully');
                  
                  // 记录日志到 Discussion
                  await github.rest.teams.createDiscussionCommentInOrg({
                    org: context.repo.owner,
                    team_slug: context.repo.repo,
                    discussion_number: discussion.number,
                    body: `🤖 **Spam Detection**: Akismet detected and removed a spam comment from @${author}.\n\n_This action was performed automatically._`
                  });
                  
                } catch (deleteError) {
                  console.error('❌ Failed to delete comment:', deleteError);
                  
                  // 如果删除失败，至少标记为spam
                  await github.rest.teams.createDiscussionCommentInOrg({
                    org: context.repo.owner,
                    team_slug: context.repo.repo,
                    discussion_number: discussion.number,
                    body: `⚠️ **Spam Alert**: Akismet detected spam content from @${author}. Manual review required.\n\n_This alert was generated automatically._`
                  });
                }
              } else {
                console.log('✅ Comment passed spam check');
              }
            } catch (error) {
              console.error('❌ Error in spam checking workflow:', error);
            }
